# Generated by Django 5.1.7 on 2025-07-30 15:19

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('microapp', '0020_project_handoff_complete'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AnalyzedFolder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('folder_path', models.CharField(help_text='Full path to the analyzed folder', max_length=500, unique=True)),
                ('folder_name', models.CharField(help_text='Name of the folder', max_length=255)),
                ('total_documents', models.IntegerField(default=0, help_text='Total number of documents found')),
                ('total_pages', models.IntegerField(default=0, help_text='Total number of pages across all documents')),
                ('oversized_count', models.IntegerField(default=0, help_text='Number of oversized documents')),
                ('has_oversized', models.BooleanField(default=False, help_text='Whether folder contains oversized documents')),
                ('estimated_rolls_16mm', models.IntegerField(default=0, help_text='Estimated 16mm rolls needed')),
                ('estimated_rolls_35mm', models.IntegerField(default=0, help_text='Estimated 35mm rolls needed')),
                ('total_estimated_rolls', models.IntegerField(default=0, help_text='Total estimated rolls needed')),
                ('file_count', models.IntegerField(default=0, help_text='Total files in folder')),
                ('total_size', models.BigIntegerField(default=0, help_text='Total size in bytes')),
                ('total_size_formatted', models.CharField(default='0 B', help_text='Human readable size', max_length=20)),
                ('pdf_folder_found', models.BooleanField(default=False, help_text='Whether a PDF folder was found')),
                ('pdf_folder_path', models.CharField(blank=True, help_text='Path to PDF folder if found', max_length=500, null=True)),
                ('analysis_data_path', models.CharField(blank=True, help_text='Path to analysis data files', max_length=500, null=True)),
                ('recommended_workflow', models.CharField(default='unknown', help_text='Recommended workflow based on analysis', max_length=50)),
                ('analyzed_at', models.DateTimeField(auto_now_add=True, help_text='When the folder was analyzed')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Last update time')),
                ('analyzed_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analyzed_folders', to=settings.AUTH_USER_MODEL)),
                ('registered_as_project', models.ForeignKey(blank=True, help_text='Project created from this analyzed folder', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='source_analyzed_folder', to='microapp.project')),
            ],
            options={
                'ordering': ['-analyzed_at'],
                'indexes': [models.Index(fields=['folder_path'], name='microapp_an_folder__0891ad_idx'), models.Index(fields=['analyzed_at'], name='microapp_an_analyze_c310b6_idx'), models.Index(fields=['has_oversized'], name='microapp_an_has_ove_440bab_idx'), models.Index(fields=['registered_as_project'], name='microapp_an_registe_b4cebb_idx')],
            },
        ),
    ]
