# Generated by Django 5.1.7 on 2025-06-10 10:41

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('microapp', '0017_add_version_to_film_label'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='HandoffRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('handoff_id', models.CharField(help_text='Unique handoff identifier', max_length=100, unique=True)),
                ('recipient_email', models.EmailField(help_text='Email address of the recipient', max_length=254)),
                ('recipient_name', models.CharField(blank=True, help_text='Name of the recipient', max_length=255, null=True)),
                ('subject', models.CharField(help_text='Email subject line', max_length=500)),
                ('custom_message', models.TextField(blank=True, help_text='Custom message added to the email', null=True)),
                ('validation_status', models.CharField(choices=[('not_validated', 'Not Validated'), ('validated', 'Validated'), ('has_warnings', 'Has Warnings'), ('has_errors', 'Has Errors')], default='not_validated', max_length=20)),
                ('total_documents', models.IntegerField(default=0, help_text='Total documents in handoff')),
                ('validated_documents', models.IntegerField(default=0, help_text='Documents that passed validation')),
                ('warning_documents', models.IntegerField(default=0, help_text='Documents with warnings')),
                ('error_documents', models.IntegerField(default=0, help_text='Documents with errors')),
                ('total_rolls', models.IntegerField(default=0, help_text='Total 16mm rolls included')),
                ('film_numbers', models.TextField(blank=True, help_text='Comma-separated list of film numbers', null=True)),
                ('excel_file_path', models.CharField(blank=True, help_text='Path to generated Excel file', max_length=500, null=True)),
                ('dat_file_path', models.CharField(blank=True, help_text='Path to generated DAT file', max_length=500, null=True)),
                ('excel_file_size', models.BigIntegerField(default=0, help_text='Size of Excel file in bytes')),
                ('dat_file_size', models.BigIntegerField(default=0, help_text='Size of DAT file in bytes')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent Successfully'), ('failed', 'Send Failed'), ('acknowledged', 'Acknowledged by Recipient'), ('completed', 'Handoff Completed')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When handoff was initiated')),
                ('sent_at', models.DateTimeField(blank=True, help_text='When email was successfully sent', null=True)),
                ('acknowledged_at', models.DateTimeField(blank=True, help_text='When recipient acknowledged receipt', null=True)),
                ('completed_at', models.DateTimeField(blank=True, help_text='When handoff was marked as completed', null=True)),
                ('error_message', models.TextField(blank=True, help_text='Error message if handoff failed', null=True)),
                ('retry_count', models.IntegerField(default=0, help_text='Number of retry attempts')),
                ('last_retry_at', models.DateTimeField(blank=True, help_text='When last retry was attempted', null=True)),
                ('outlook_message_id', models.CharField(blank=True, help_text='Outlook message ID for tracking', max_length=255, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, help_text='IP address of sender', null=True)),
                ('user_agent', models.TextField(blank=True, help_text='User agent string', null=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='handoff_records', to='microapp.project')),
                ('user', models.ForeignKey(help_text='User who initiated the handoff', on_delete=django.db.models.deletion.CASCADE, related_name='handoff_records', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='HandoffValidationSnapshot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_id', models.CharField(help_text='Document ID (filename)', max_length=100)),
                ('roll_number', models.CharField(help_text='Roll/film number', max_length=50)),
                ('barcode', models.CharField(help_text='Document barcode', max_length=100)),
                ('com_id', models.CharField(blank=True, help_text='COM ID at time of handoff', max_length=50, null=True)),
                ('temp_blip', models.CharField(blank=True, help_text='Temporary blip code', max_length=50, null=True)),
                ('film_blip', models.CharField(blank=True, help_text='Film log blip code', max_length=50, null=True)),
                ('validation_status', models.CharField(help_text='Validation status (validated, warning, error)', max_length=20)),
                ('validation_message', models.TextField(blank=True, help_text='Validation message or error details', null=True)),
                ('missing_com_id', models.BooleanField(default=False, help_text='Whether COM ID was missing')),
                ('missing_film_blip', models.BooleanField(default=False, help_text='Whether film blip was missing')),
                ('blip_mismatch', models.BooleanField(default=False, help_text="Whether blips didn't match")),
                ('other_issues', models.TextField(blank=True, help_text='Other validation issues', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('handoff_record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='validation_snapshots', to='microapp.handoffrecord')),
            ],
            options={
                'ordering': ['handoff_record', 'document_id'],
            },
        ),
        migrations.AddIndex(
            model_name='handoffrecord',
            index=models.Index(fields=['handoff_id'], name='microapp_ha_handoff_c21de7_idx'),
        ),
        migrations.AddIndex(
            model_name='handoffrecord',
            index=models.Index(fields=['project', 'status'], name='microapp_ha_project_948f65_idx'),
        ),
        migrations.AddIndex(
            model_name='handoffrecord',
            index=models.Index(fields=['status'], name='microapp_ha_status_5907ad_idx'),
        ),
        migrations.AddIndex(
            model_name='handoffrecord',
            index=models.Index(fields=['created_at'], name='microapp_ha_created_78b8ad_idx'),
        ),
        migrations.AddIndex(
            model_name='handoffrecord',
            index=models.Index(fields=['sent_at'], name='microapp_ha_sent_at_8d6263_idx'),
        ),
        migrations.AddIndex(
            model_name='handoffrecord',
            index=models.Index(fields=['recipient_email'], name='microapp_ha_recipie_85a654_idx'),
        ),
        migrations.AddIndex(
            model_name='handoffrecord',
            index=models.Index(fields=['validation_status'], name='microapp_ha_validat_d68bcc_idx'),
        ),
        migrations.AddIndex(
            model_name='handoffvalidationsnapshot',
            index=models.Index(fields=['handoff_record', 'validation_status'], name='microapp_ha_handoff_d2f22b_idx'),
        ),
        migrations.AddIndex(
            model_name='handoffvalidationsnapshot',
            index=models.Index(fields=['validation_status'], name='microapp_ha_validat_46baac_idx'),
        ),
        migrations.AddIndex(
            model_name='handoffvalidationsnapshot',
            index=models.Index(fields=['missing_com_id'], name='microapp_ha_missing_a9534b_idx'),
        ),
        migrations.AddIndex(
            model_name='handoffvalidationsnapshot',
            index=models.Index(fields=['missing_film_blip'], name='microapp_ha_missing_226434_idx'),
        ),
        migrations.AddIndex(
            model_name='handoffvalidationsnapshot',
            index=models.Index(fields=['blip_mismatch'], name='microapp_ha_blip_mi_bccf74_idx'),
        ),
    ]
